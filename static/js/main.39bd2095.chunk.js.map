{"version":3,"sources":["components/PeopleItem.tsx","pages/People.tsx","api.ts","components/Loader/Loader.tsx","components/PageNavLink.tsx","pages/NotFound.tsx","pages/Home.tsx","App.tsx","index.tsx"],"names":["PeopleItem","person","selectedTodoId","peopleFromServer","name","sex","born","died","fatherName","motherName","slug","LinkParrents","selectedParrents","findedParrents","find","people","to","className","classNames","People","errorMessage","useParams","length","map","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","Loader","useState","isStatus","setStatus","useEffect","PageNavLink","text","isActive","NotFound","Home","App","setPeopleFromServer","setErrorMessage","persons","catch","role","path","element","replace","index","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.39bd2095.chunk.js","sourcesContent":["import { Link } from 'react-router-dom';\nimport classNames from 'classnames';\nimport { Person } from '../types';\n\nexport const PeopleItem: React.FC<{\n  person: Person;\n  selectedTodoId: string;\n  peopleFromServer: Person[] | undefined;\n}> = ({ person, selectedTodoId, peopleFromServer = [] }) => {\n  const {\n    name, sex, born, died, fatherName, motherName, slug,\n  }\n    = person;\n\n  const LinkParrents = (selectedParrents: string | null) => {\n    const findedParrents = selectedParrents && peopleFromServer.find(\n      (people) => people.name === selectedParrents,\n    );\n\n    if (findedParrents) {\n      return (\n        <Link\n          to={`/people/${findedParrents.slug}`}\n          className={classNames({\n            'has-text-danger': findedParrents.sex === 'f',\n          })}\n        >\n          {selectedParrents}\n        </Link>\n      );\n    }\n\n    return selectedParrents || ' - ';\n  };\n\n  return (\n    <tr\n      data-cy=\"person\"\n      className={classNames({\n        'has-background-warning': selectedTodoId === slug,\n      })}\n    >\n      <td>\n        <Link\n          to={`/people/${slug}`}\n          className={classNames({\n            'has-text-danger': sex === 'f',\n          })}\n        >\n          {name}\n        </Link>\n      </td>\n\n      <td>{sex}</td>\n      <td>{born}</td>\n      <td>{died}</td>\n      <td>{motherName === null ? ' - ' : LinkParrents(motherName)}</td>\n      <td>{fatherName === null ? ' - ' : LinkParrents(fatherName)}</td>\n    </tr>\n  );\n};\n","// import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { PeopleItem } from '../components/PeopleItem';\nimport { Person } from '../types';\n// import { getPeople } from '../api';\n\nexport const People: React.FC<{\n  peopleFromServer: Person[] | undefined;\n  errorMessage: string;\n}> = ({ peopleFromServer, errorMessage }) => {\n  const { slug = '' } = useParams();\n\n  return (\n    <div className=\"container\">\n      <h1 className=\"title\">People Page</h1>\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {errorMessage.length > 2 && (\n            <p\n              data-cy={\n                errorMessage.length === 33\n                  ? 'noPeopleMessage'\n                  : 'peopleLoadingError'\n              }\n              className=\"has-text-danger\"\n            >\n              {errorMessage}\n            </p>\n          )}\n\n          <table\n            data-cy=\"peopleTable\"\n            className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n          >\n            <thead>\n              <tr>\n                <th>Name</th>\n                <th>Sex</th>\n                <th>Born</th>\n                <th>Died</th>\n                <th>Mother</th>\n                <th>Father</th>\n              </tr>\n            </thead>\n\n            <tbody>\n              {peopleFromServer\n                && peopleFromServer.map((person) => {\n                  return (\n                    <PeopleItem\n                      person={person}\n                      key={person.name}\n                      selectedTodoId={slug}\n                      peopleFromServer={peopleFromServer}\n                    />\n                  );\n                })}\n            </tbody>\n          </table>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import { useEffect, useState } from 'react';\nimport './Loader.scss';\n\nexport const Loader = () => {\n  const [isStatus, setStatus] = useState(true);\n\n  useEffect(() => {\n    setTimeout(() => setStatus(false), 5000);\n  }, []);\n\n  return (\n    <>\n      {isStatus ? (\n        <div className=\"Loader\" data-cy=\"loader\">\n          <div className=\"Loader__content\" />\n        </div>\n      ) : (\n        <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n          Something went wrong\n        </p>\n      )}\n    </>\n  );\n};\n","import { NavLink } from 'react-router-dom';\nimport classNames from 'classnames';\nimport { FC } from 'react';\n\ntype Props = {\n  to: string;\n  text: string;\n};\n\nexport const PageNavLink: FC<Props> = ({ to, text }) => (\n  <NavLink\n    to={to}\n    className={({ isActive }) => classNames(\n      'navbar-item',\n      { 'has-background-grey-lighter': isActive },\n    )}\n  >\n    {text}\n  </NavLink>\n);\n","export const NotFound = () => {\n  return (\n    <div className=\"container\">\n      <h1 className=\"title\">Page not found</h1>\n    </div>\n  );\n};\n","export const Home = () => {\n  return (\n    <div className=\"container\">\n      <h1 className=\"title\">Home Page</h1>\n    </div>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport './App.scss';\nimport { Navigate, Route, Routes } from 'react-router-dom';\nimport { People } from './pages/People';\nimport { Person } from './types';\nimport { getPeople } from './api';\nimport { Loader } from './components/Loader';\nimport { PageNavLink } from './components/PageNavLink';\nimport { NotFound } from './pages/NotFound';\nimport { Home } from './pages/Home';\n\nexport const App = () => {\n  const [peopleFromServer, setPeopleFromServer] = useState<Person[]>();\n  const [errorMessage, setErrorMessage] = useState('');\n\n  useEffect(() => {\n    getPeople()\n      .then((persons) => {\n        setPeopleFromServer(persons);\n        if (peopleFromServer?.length === 0) {\n          setErrorMessage('There are no people on the server');\n        }\n      })\n      .catch(() => setErrorMessage('Something went wrong'));\n  }, []);\n\n  return (\n    <div data-cy=\"app\">\n      <nav\n        data-cy=\"nav\"\n        className=\"navbar is-fixed-top has-shadow\"\n        role=\"navigation\"\n        aria-label=\"main navigation\"\n      >\n        <div className=\"container\">\n          <div className=\"navbar-brand\">\n            <PageNavLink to=\"/home\" text=\"Home\" />\n            <PageNavLink to=\"/people\" text=\"People\" />\n          </div>\n        </div>\n      </nav>\n\n      <main className=\"section\">\n        <Routes>\n          <Route path=\"*\" element={<NotFound />} />\n          <Route path=\"/home\" element={<Home />} />\n          <Route path=\"/\" element={<Navigate to=\"/home\" replace />} />\n\n          <Route path=\"/people\">\n            <Route\n              index\n              element={\n                peopleFromServer ? (\n                  <People\n                    peopleFromServer={peopleFromServer}\n                    errorMessage={errorMessage}\n                  />\n                ) : (\n                  <Loader />\n                )\n              }\n            />\n            <Route\n              path=\":slug\"\n              element={(\n                <People\n                  peopleFromServer={peopleFromServer}\n                  errorMessage={errorMessage}\n                />\n              )}\n            />\n          </Route>\n        </Routes>\n      </main>\n    </div>\n  );\n};\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <HashRouter>\n      <App />\n    </HashRouter>,\n  );\n"],"sourceRoot":""}