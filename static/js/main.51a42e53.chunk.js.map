{"version":3,"sources":["components/PeopleItem.tsx","components/Loader/Loader.tsx","pages/People.tsx","api.ts","components/PageNavLink.tsx","pages/NotFound.tsx","pages/Home.tsx","App.tsx","index.tsx"],"names":["PeopleItem","person","selectedTodoId","peopleFromServer","name","sex","born","died","fatherName","motherName","slug","linkParents","selectedParrents","findedParents","find","people","to","className","classNames","Loader","isError","setIsError","useEffect","setTimeout","People","isLoading","errorMessage","useParams","length","map","getPeople","delay","Promise","resolve","then","fetch","response","json","PageNavLink","text","isActive","NotFound","Home","App","useState","setPeopleFromServer","setErrorMessage","setIsLoading","persons","catch","finally","role","path","element","replace","index","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.51a42e53.chunk.js","sourcesContent":["import { Link } from 'react-router-dom';\nimport classNames from 'classnames';\nimport { Person } from '../types';\n\nexport const PeopleItem: React.FC<{\n  person: Person;\n  selectedTodoId: string;\n  peopleFromServer: Person[] | undefined;\n}> = ({ person, selectedTodoId, peopleFromServer = [] }) => {\n  const {\n    name,\n    sex,\n    born,\n    died,\n    fatherName,\n    motherName,\n    slug,\n  }\n    = person;\n\n  const linkParents = (selectedParrents: string | null) => {\n    const findedParents = selectedParrents && peopleFromServer.find(\n      (people) => people.name === selectedParrents,\n    );\n\n    if (findedParents) {\n      return (\n        <Link\n          to={`/people/${findedParents.slug}`}\n          className={classNames({\n            'has-text-danger': findedParents.sex === 'f',\n          })}\n        >\n          {selectedParrents}\n        </Link>\n      );\n    }\n\n    return selectedParrents || ' - ';\n  };\n\n  return (\n    <tr\n      data-cy=\"person\"\n      className={classNames({\n        'has-background-warning': selectedTodoId === slug,\n      })}\n    >\n      <td>\n        <Link\n          to={`/people/${slug}`}\n          className={classNames({\n            'has-text-danger': sex === 'f',\n          })}\n        >\n          {name}\n        </Link>\n      </td>\n\n      <td>{sex}</td>\n      <td>{born}</td>\n      <td>{died}</td>\n      <td>{linkParents(motherName)}</td>\n      <td>{linkParents(fatherName)}</td>\n    </tr>\n  );\n};\n","import { useEffect } from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC<{\n  isError: boolean;\n  setIsError: React.Dispatch<React.SetStateAction<boolean>>;\n}> = ({\n  isError,\n  setIsError,\n}) => {\n  useEffect(() => {\n    setTimeout(() => setIsError(true), 5000);\n  }, []);\n\n  return (\n    <>\n      {isError ? (\n        <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n          Something went wrong\n        </p>\n      ) : (\n        <div className=\"Loader\" data-cy=\"loader\">\n          <div className=\"Loader__content\" />\n        </div>\n      )}\n    </>\n  );\n};\n","import { useParams } from 'react-router-dom';\nimport { PeopleItem } from '../components/PeopleItem';\nimport { Person } from '../types';\nimport { Loader } from '../components/Loader';\n\nexport const People: React.FC<{\n  isError: boolean;\n  setIsError: React.Dispatch<React.SetStateAction<boolean>>;\n  isLoading: boolean;\n  peopleFromServer: Person[] | undefined;\n  errorMessage: string | undefined;\n}> = ({\n  isError,\n  setIsError,\n  isLoading,\n  peopleFromServer,\n  errorMessage,\n}) => {\n  const { slug = '' } = useParams();\n\n  return isLoading ? (\n    <Loader setIsError={setIsError} isError={isError} />\n  ) : (\n    <div className=\"container\">\n      <h1 className=\"title\">People Page</h1>\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {isError && (\n            <p\n              data-cy={\n                peopleFromServer?.length === 0\n                  ? 'noPeopleMessage'\n                  : 'peopleLoadingError'\n              }\n              className=\"has-text-danger\"\n            >\n              {errorMessage}\n            </p>\n          )}\n\n          {!isError && (\n            <table\n              data-cy=\"peopleTable\"\n              className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n            >\n              <thead>\n                <tr>\n                  <th>Name</th>\n                  <th>Sex</th>\n                  <th>Born</th>\n                  <th>Died</th>\n                  <th>Mother</th>\n                  <th>Father</th>\n                </tr>\n              </thead>\n\n              <tbody>\n                {peopleFromServer\n                && peopleFromServer.map((person) => {\n                  return (\n                    <PeopleItem\n                      person={person}\n                      key={person.name}\n                      selectedTodoId={slug}\n                      peopleFromServer={peopleFromServer}\n                    />\n                  );\n                })}\n              </tbody>\n            </table>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import { NavLink } from 'react-router-dom';\nimport classNames from 'classnames';\nimport { FC } from 'react';\n\ntype Props = {\n  to: string;\n  text: string;\n};\n\nexport const PageNavLink: FC<Props> = ({ to, text }) => (\n  <NavLink\n    to={to}\n    className={({ isActive }) => classNames(\n      'navbar-item',\n      { 'has-background-grey-lighter': isActive },\n    )}\n  >\n    {text}\n  </NavLink>\n);\n","export const NotFound = () => {\n  return (\n    <div className=\"container\">\n      <h1 className=\"title\">Page not found</h1>\n    </div>\n  );\n};\n","export const Home = () => {\n  return (\n    <div className=\"container\">\n      <h1 className=\"title\">Home Page</h1>\n    </div>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport './App.scss';\nimport { Navigate, Route, Routes } from 'react-router-dom';\nimport { People } from './pages/People';\nimport { Person } from './types';\nimport { getPeople } from './api';\nimport { PageNavLink } from './components/PageNavLink';\nimport { NotFound } from './pages/NotFound';\nimport { Home } from './pages/Home';\n\nexport const App = () => {\n  const [peopleFromServer, setPeopleFromServer] = useState<Person[]>([]);\n  const [errorMessage, setErrorMessage] = useState<string>();\n  const [isLoading, setIsLoading] = useState(true);\n  const [isError, setIsError] = useState(false);\n\n  useEffect(() => {\n    getPeople()\n      .then((persons) => {\n        setIsLoading(true);\n        setPeopleFromServer(persons);\n        if (!peopleFromServer.length) {\n          setErrorMessage('There are no people on the server');\n        }\n      })\n      .catch(() => {\n        setIsError(true);\n        setErrorMessage('Something went wrong');\n      })\n      .finally(() => setIsLoading(false));\n  }, []);\n\n  return (\n    <div data-cy=\"app\">\n      <nav\n        data-cy=\"nav\"\n        className=\"navbar is-fixed-top has-shadow\"\n        role=\"navigation\"\n        aria-label=\"main navigation\"\n      >\n        <div className=\"container\">\n          <div className=\"navbar-brand\">\n            <PageNavLink to=\"/home\" text=\"Home\" />\n            <PageNavLink to=\"/people\" text=\"People\" />\n          </div>\n        </div>\n      </nav>\n\n      <main className=\"section\">\n        <Routes>\n          <Route path=\"*\" element={<NotFound />} />\n          <Route path=\"/home\" element={<Home />} />\n          <Route path=\"/\" element={<Navigate to=\"/home\" replace />} />\n\n          <Route path=\"/people\">\n            <Route\n              index\n              element={(\n                <People\n                  isError={isError}\n                  setIsError={setIsError}\n                  isLoading={isLoading}\n                  peopleFromServer={peopleFromServer}\n                  errorMessage={errorMessage}\n                />\n              )}\n            />\n            <Route\n              path=\":slug\"\n              element={(\n                <People\n                  isError={isError}\n                  setIsError={setIsError}\n                  isLoading={isLoading}\n                  peopleFromServer={peopleFromServer}\n                  errorMessage={errorMessage}\n                />\n              )}\n            />\n          </Route>\n        </Routes>\n      </main>\n    </div>\n  );\n};\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <HashRouter>\n      <App />\n    </HashRouter>,\n  );\n"],"sourceRoot":""}